package auth

// Code generated by jsonapi. DO NOT EDIT.
// Source: github.com/pentops/o5-aws-tool/libo5/o5/auth/v1/auth

import (
	time "time"
)

// ActorType Proto: o5.auth.v1.ActorType
type ActorType struct {
	UserAgent *ActorType_UserAgent `json:"userAgent,omitempty"`
	ApiClient *ActorType_ApiClient `json:"apiClient,omitempty"`
}

func (s ActorType) OneofKey() string {
	if s.UserAgent != nil {
		return "userAgent"
	}
	if s.ApiClient != nil {
		return "apiClient"
	}
	return ""
}

func (s ActorType) Type() interface{} {
	if s.UserAgent != nil {
		return s.UserAgent
	}
	if s.ApiClient != nil {
		return s.ApiClient
	}
	return nil
}

// ActorType_UserAgent Proto: o5.auth.v1.ActorType.UserAgent
type ActorType_UserAgent struct {
	ClientAuth *ClientAuthType `json:"clientAuth,omitempty"`
	UserAgent  string          `json:"userAgent,omitempty"`
	IpAddress  string          `json:"ipAddress,omitempty"`
}

// ClientAuthType_SessionAuth Proto: o5.auth.v1.ClientAuthType.SessionAuth
type ClientAuthType_SessionAuth struct {
	SessionManager  string     `json:"sessionManager,omitempty"`
	SessionId       string     `json:"sessionId,omitempty"`
	VerifiedAt      *time.Time `json:"verifiedAt,omitempty"`
	AuthenticatedAt *time.Time `json:"authenticatedAt,omitempty"`
}

// Claim Proto: o5.auth.v1.Claim
type Claim struct {
	TenantFilter map[string]string `json:"tenantFilter,omitempty"`
	Scopes       []string          `json:"scopes,omitempty"`
}

// Actor_NamedActor Proto: o5.auth.v1.Actor.NamedActor
type Actor_NamedActor struct {
	Name string `json:"name,omitempty"`
}

// Actor Proto: o5.auth.v1.Actor
type Actor struct {
	Authenticated *AuthenticatedActor `json:"authenticated,omitempty"`
	Named         *Actor_NamedActor   `json:"named,omitempty"`
}

func (s Actor) OneofKey() string {
	if s.Authenticated != nil {
		return "authenticated"
	}
	if s.Named != nil {
		return "named"
	}
	return ""
}

func (s Actor) Type() interface{} {
	if s.Authenticated != nil {
		return s.Authenticated
	}
	if s.Named != nil {
		return s.Named
	}
	return nil
}

// AuthenticatedActor Proto: o5.auth.v1.AuthenticatedActor
type AuthenticatedActor struct {
	Id        string            `json:"id,omitempty"`
	Type      *ActorType        `json:"type"`
	Claim     *Claim            `json:"claim"`
	ActorTags map[string]string `json:"actorTags,omitempty"`
}

// ClientAuthType Proto: o5.auth.v1.ClientAuthType
type ClientAuthType struct {
	Jwt     *ClientAuthType_JWTAuth     `json:"jwt,omitempty"`
	Session *ClientAuthType_SessionAuth `json:"session,omitempty"`
}

func (s ClientAuthType) OneofKey() string {
	if s.Jwt != nil {
		return "jwt"
	}
	if s.Session != nil {
		return "session"
	}
	return ""
}

func (s ClientAuthType) Type() interface{} {
	if s.Jwt != nil {
		return s.Jwt
	}
	if s.Session != nil {
		return s.Session
	}
	return nil
}

// ClientAuthType_JWTAuth Proto: o5.auth.v1.ClientAuthType.JWTAuth
type ClientAuthType_JWTAuth struct {
	JwtId    string     `json:"jwtId,omitempty"`
	Issuer   string     `json:"issuer,omitempty"`
	IssuedAt *time.Time `json:"issuedAt,omitempty"`
}

// ActorType_ApiClient Proto: o5.auth.v1.ActorType.ApiClient
type ActorType_ApiClient struct {
	ClientAuth *ClientAuthType `json:"clientAuth,omitempty"`
	IpAddress  string          `json:"ipAddress,omitempty"`
}
